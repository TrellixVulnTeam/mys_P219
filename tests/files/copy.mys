class Foo:
    a: i64
    b: string
    c: bytes

    def __deepcopy__(self, other: Foo, memo: {string: string}):
        self.a = deepcopy(other.a)
        self.b = deepcopy(other.b)
        self.c = deepcopy(other.c)

class Bar:
    foo: Foo

    def __copy__(self, other: Bar):
        self.foo = None

    def __deepcopy__(self, other: Bar, memo: {string: string}):
        self.foo = deepcopy(other.foo)

@test
def test_copy():
    foo = Foo(5, "bar", b"123")

    foo_copy = copy(foo)
    assert foo == foo_copy
    assert foo is not foo_copy
    assert foo.b is foo_copy.b
    assert foo.c is foo_copy.c

    foo_deepcopy = deepcopy(foo)
    assert foo == foo_deepcopy
    assert foo is not foo_deepcopy
    assert foo.c is not foo_deepcopy.c

    bar = Bar(foo)
    bar_copy = copy(bar)
    assert bar_copy.foo is None
    bar_deepcopy = deepcopy(bar)
    assert bar_deepcopy.foo is not bar.foo
