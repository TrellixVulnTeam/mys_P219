from apa import Banan
from fiber.a import Queue as K
from . import bb
from .mm import kalle_kula  #apa

#Hello!
def foo( a : i64, # Kalle!
         b:  string    =None)  ->  (i64,   string):
    return None  # Apa!

# Hopp


# san.

def bar   (  ):
    pass

FOO:  [i64] = [    1, 3,
              -2, 1]

BAR: bool=True
FIE: string  =  ""
# gg
FAM :  ( bool,  string)=   None

class Foo:
    x: (i64, bool)
    a: string

    def foo(  self):

        pass

    def bar (self) -> u8:
        """Hej
           hopp.
        """
        a  :u8  = 1
        # a
        a +=  1
        return  a

@test
def test_a():
    pass

# Hi!

c"""
int a = 0;
"""

def g():
    pass

def h():
    pass

class Bar(Bb):

    def foo(self, a : i64):
        pass

class Fie:
    # before member 1
    a: i64
    # before member 2
    b: i64

    # before method
    def foo(self, a : i64):
        pass

# Ho!
@trait
class Bb:
    pass
    # MUST BE AT END OF FILE!
