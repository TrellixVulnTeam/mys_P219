from .mod2 import Base2
from .mod2 import Foo2
from .mod2 import VAR2
from .mod2 import func2

trait Base1:
    pass

class Foo1(Base2):
    a: Foo1
    b: Foo2
    c: Base1
    d: Base2

VAR1: Foo1 = Foo1(None, Foo2(None, None, None, None), None, None)

func func1():
    pass

@test
func test_foo_1():
    assert Foo1(None, None, None, None) is not None

@test
func test_foo_2():
    assert Foo2(None, None, None, None) is not None

@test
func test_var_1():
    assert VAR1.a is None
    assert VAR1.b is not None

@test
func test_var_2():
    assert VAR2.i is not None
    assert VAR2.j is None

@test
func test_func_1():
    func1()

@test
func test_func_2():
    func2()
