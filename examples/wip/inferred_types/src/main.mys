# Variable types inferred from return type.
def foo() -> ([string], {i64}, {char: bool}):
    x = []  # [string]
    y = {}  # {i64}
    z = {}  # {char: bool}

    return x, y, z

def fim() -> string:
    return None

# Variable types inferred from method calls.
def bar():
    x = []  # [string]
    y = {}  # {i64}
    z = {}  # {i64: bool}

    x.append(fim())
    y.add(3)
    z.update({2: True})

    print(x, y, z)

# Variable type inferred from assignment.
def bar(y: bool):
    x = None  # (i64, i64)

    if y:
        x = (1, 3)

    print(x)

def fam(a: string):
    pass

def fam(a: bytes):
    pass

def fie():
    a = None  # string
    fam(a)

class Foo:

    def foo(self, x: [i64]):
        pass

def fom():
    v = []  # [i64]
    Foo().foo(v)

def main():
    foo()
    bar()
