from fiber import Fiber
from poll import Poll
from queue import Queue
from timer import Timer
from random.pseudo import random
from .calculator import Calculator
from .calculator import Add
from .calculator import Result
from .message import Message

class Student(Fiber):
    """A student adding two numbers using a calculator.

    """

    _student_queue: Queue[Message]
    _calculator_queue: Queue[Message]
    _timer: Timer

    def __init__(self,
                 student_queue: Queue[Message],
                 calculator_queue: Queue[Message]):
        self._student_queue = student_queue
        self._calculator_queue = calculator_queue
        self._timer = Timer(Time(1, 0))

    def run(self):
        poll = Poll()
        poll.add(self._student_queue)
        poll.add(timer)

        self._timer.start()

        while True:
            item = poll.wait()

            if item is self._student_queue:
                match self._student_queue.get():
                    case Result() as message:
                        print(message)
                        self._timer.start()
                    case Message() as message:
                        raise ValueError(f"Unexpected message {message}.")
            elif item is self._timer:
                print('Timeout.')
                self._calculator_queue.put(Add(random(), random()))
            else:
                raise UnreachableError()
