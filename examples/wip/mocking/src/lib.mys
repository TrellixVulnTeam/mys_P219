from .fie import fum
# Should be automatic.
from .fie import mock_fum
from .fie import mock_fum_remove

def foo(value: i64) -> i64:
    return 2 * fum(value)

@test
def test_foo():
    # mock(fum)
    mock_fum().call(1, 2)
    mock_fum().call(4, 5)
    assert foo(1) == 4
    assert foo(4) == 10

    try:
        message = ""
        foo(10)
    except AssertionError as error:
        message = str(error)

    assert message == "AssertionError(message=\"Unexpected call.\")"

    # Should be automatic.
    mock_fum_remove()

@test
def test_foo_no_mock():
    assert foo(1) == -2

@test
def test_foo_many():
    # mock(fum)
    mock_fum().call(2, 5, count=-1)
    assert foo(2) == 10
    assert foo(2) == 10
    assert foo(2) == 10

    # Should be automatic.
    mock_fum_remove()

@test
def test_foo_no_calls_allowed():
    # mock(fum)
    mock_fum().call(2, 5, count=0)

    try:
        message = ""
        foo(2)
    except AssertionError as error:
        message = str(error)

    assert message == "AssertionError(message=\"No calls allowed.\")"

    # Should be automatic.
    mock_fum_remove()
