@trait
class Handler:

    func execute(self):
        pass

class Commands:
    _handlers: {string: Handler}

    func __init__(self):
        self._handlers = {}

    func register_command(self, name: string, handler: Handler):
        self._handlers[name] = handler

    func execute(self, name: string):
        handler = self._handlers.get(name, None)

        if handler is not None:
            handler.execute()
        elif name != "":
            print(f"Unknown command {name}.")

    func print_help(self):
        print("Available commands:")

        for name in self._handlers.keys():
            print("  ", name)

class HiHandler(Handler):
    _count: u64

    func execute(self):
        self._count += 1
        print(f"Hi #{self._count}!")

class ExitHandler(Handler):

    func execute(self):
        print("Bye!")

        raise SystemExitError("exit")

func main():
    commands = Commands()
    commands.register_command("hi", HiHandler())
    commands.register_command("exit", ExitHandler())
    commands.print_help()

    while True:
        command = input("> ")

        try:
            commands.execute(command)
        except:
            break
