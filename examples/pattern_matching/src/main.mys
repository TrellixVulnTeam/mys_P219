@trait
class Base:
    pass

class Foo(Base):
    a: i64
    b: string

class Bar(Base):
    pass

class Fie(Base):
    pass

def classes(base: Base):
    # Foo() and Bar() just means these classes with any state. No
    # instance is created, just the type is checked.
    match base:
        case Foo(a=1) as foo:
            print(f"Class Foo with a=1 and b=\"{foo.b}\".")
        case Foo(a=2, b="ho"):
            print("Class Foo with a=2 and b=\"ho\".")
        case Foo():
            print("Class Foo.")
        case Bar():
            print("Class Bar.")
        case _:
            print(f"Other class: {base}")

def numbers(value: i64):
    match value:
        case 0:
            print("Zero integer.")
        case 5:
            print("Five integer.")

def strings(value: string):
    match value:
        case "foo":
            print("String foo.")
        case _:
            print(f"Other string: {value}")

def main():
    classes(Foo(1, "hi"))
    classes(Foo(2, "ho"))
    classes(Foo(3, ""))
    classes(Bar())
    classes(Fie())
    numbers(0)
    numbers(1)
    numbers(5)
    strings("foo")
    strings("bar")
