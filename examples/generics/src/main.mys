# Should probably be replaced by "func triple<T>(value: T) -> T:"
# eventually.
@generic(T)
func triple(value: T) -> T:
    return 3 * value

# Should probably be replaced by "class Adder<T>:" eventually.
@generic(T)
class Adder:

    value: T

    func add(self, value: T):
        self.value += value

# Should probably be replaced by "Adder64 = Adder<i64>" eventually. We
# want aliases, right?
# Adder64 = Adder[i64]

func main():
    # Should probably be replaced by "print(triple<u8>(5))"
    # eventually.
    print("triple[u8](5):", triple[u8](5))

    # Should probably be replaced by "adder = Adder<i64>()"
    # eventually.
    adder = Adder[i64](5)
    adder.add(3)
    print("Adder[i64]:   ", adder)

    # adder64 = Adder64()
    # adder64.add(3)
    # print(adder64.value)
